/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

html, body {
    margin: 0;
    background-color: #000;
    color: white;
    font-family: 'Poller One', cursive;
}

.fade-wrapper {
    position: absolute;
    z-index:9999;
    height: 100%;
    width: 100%;
    display: none;
}

.fade {
    position: absolute;
    background-color: #000;
    backdrop-filter: blur(5px);
    height: 100%;
    width: 100%;
    opacity: 0.5;
}

.sidebar {
    position: absolute;
    right: 0;
    background-color: #000;
    width: 50%;
    height: 100%;
    box-shadow: -3px 0px 10px red;
}

.text-center {
    text-align: center;
}

.list-characters {
    display: flex;
    flex-direct: row;
    flex-wrap: wrap;
}

.character {
    height: 200px;
    width: 200px;
}

.character:hover {
    transition: background-color 0.5s ease;
    color: #fc0;
}

.paginate {
    width: 100%;
    height: 50px;
    margin-top: 50px;
    font-size: 32px;
    text-align: center;
    color: #fc0 !important;
}

.paginate a:visited {
  color: #fc0;
}

.star-wars {
    /* Flexbox to center the entire element on the screen */
    display: flex;
    justify-content: center;
    /* This is a magic number based on the context in which this snippet is used and effects the perspective */
    height: 800px;
    /* This sets allows us to transform the text on a 3D plane, and is somewhat a magic number */
    perspective: 400px;
    /* The rest is totally up to personal styling preferences */
    color: #feda4a;
    font-size: 500%;
    font-weight: 600;
    letter-spacing: 6px;
    line-height: 150%;
    text-align: justify;
}

.crawl {
    /* Position the element so we can adjust the top property in the animation */
    position: relative;
    /* Defines the skew origin at the very center when we apply transforms on the animation */
    transform-origin: 50% 100%;
    /* Adds the crawl animation, which plays for one minute */
    animation: crawl 60s linear;
}

@keyframes crawl {
    0% {
        /* The element starts below the screen */
        top: 0;
        /* Rotate the text 20 degrees but keep it close to the viewer */
        transform: rotateX(20deg) translateZ(0);
    }
    100% {
        /* This is a magic number, but using a big one to make sure the text is fully off the screen at the end */
        top: -6000px;
        /* Slightly increasing the rotation at the end and moving the text far away from the viewer */
        transform: rotateX(25deg) translateZ(-2500px);
    }
}